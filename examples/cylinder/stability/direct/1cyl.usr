c-----------------------------------------------------------------------
      subroutine userchk
      use neklab
      use LightKrylov, only: eigs
      include 'SIZE'
      include 'TOTAL'

	type(nek_dvector), allocatable :: bf
	type(nek_dvector), allocatable :: eigvecs(:), wrk
	type(exponential_propagator), allocatable :: exptA
	real(kind=wp) :: alpha, residuals(128)
	complex(kind=wp) :: eigvals(128)
	integer :: i, info
	integer, parameter :: kdim = 128
	
	if (istep.eq.0) then

		! Load baseflow.
		allocate(bf)
		call load_fld("BF_1cyl0.f00001")
		call nopcopy(bf%vx, bf%vy, bf%vz, bf%pr, bf%theta, vx, vy, vz, pr, t)

		! Exponential propagator.
		exptA = exponential_propagator(1.0_wp, bf)

		! Allocate and initialize eigenvectors.
		allocate(eigvecs(kdim+1)) ; allocate(wrk)
		call eigvecs(1)%rand() ; call exptA%matvec(eigvecs(1), wrk)
		call eigvecs(1)%axpby(0.0_wp, wrk, 1.0_wp)
		alpha = eigvecs(1)%norm() ; call eigvecs(1)%scal(1.0_wp / alpha)

		! Run eigenvalue analysis.
		call eigs(exptA, eigvecs, eigvals, residuals, info)

		if (nid.eq.0) then
			open(unit=1234, file="eigenspectrum.dat")
			do i = 1, size(eigvals)
			write(1234, *) eigvals(i)%re, eigvals(i)%im, residuals(i)
			enddo
			close(1234)
		endif
		do i = 1, 10
		call outpost(eigvecs(i)%vx, eigvecs(i)%vy, eigvecs(i)%vz, eigvecs(i)%pr, eigvecs(i)%theta, "eig")
		enddo

		call nek_end()
	endif
      return
      end
c----------------------------------------------------------------------
      subroutine userf (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ffx = 0.0d0
      ffy = 0.0d0
      ffz = 0.0d0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux=1.0d0
         uy=0.0d0
         uz=0.0d0
         temp=0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux = 1.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp=0.0d0

      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      udiff = 0.0d0
      utrans = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      qvol = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      integer iel,ifc
      
      !this mesh was generatd with genbox
      !with only BCs for velicity
      !here we chenge outflow to dirichlet if adjoint
      !and initilize BCs for scalar field

      if(uparam(1)==3.2)then !if adjoint, change BCs
      do iel=1,nelt
      do ifc = 1, 2*ndim
        if(cbc(ifc,iel,1).eq.'O  ')cbc(ifc,iel,1)='v  '
      enddo
      enddo
      endif

      if(ifheat)then
      cbc(:,:,2)=cbc(:,:,1)
      do iel=1,nelt
       do ifc = 1, 2*ndim
        if(cbc(ifc,iel,1).eq.'W  ')cbc(ifc,iel,2)='t  '
        if(cbc(ifc,iel,1).eq.'v  ')cbc(ifc,iel,2)='t  '
      enddo
      enddo
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
